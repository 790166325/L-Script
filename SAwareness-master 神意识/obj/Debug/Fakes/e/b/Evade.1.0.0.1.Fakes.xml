<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Evade.1.0.0.1.Fakes</name>
    </assembly>
    <members>
        <member name="T:Evade.Fakes.ShimEvader">
            <summary>Evade.Evader 的填充码类型</summary>
        </member>
        <member name="M:Evade.Fakes.ShimEvader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Evade.Fakes.ShimEvader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Evade.Fakes.ShimEvader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Evade.Fakes.ShimEvader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Evade.Fakes.ShimEvader.GetEvadePointsInt32Int32BooleanBoolean">
            <summary>设置 Evader.GetEvadePoints(Int32 speed, Int32 delay, Boolean isBlink, Boolean onlyGood) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimEvader.GetEvadeTargetsSpellValidTargetsArrayInt32Int32SingleBooleanBooleanBoolean">
            <summary>设置 Evader.GetEvadeTargets(SpellValidTargets[] validTargets, Int32 speed, Int32 delay, Single range, Boolean isBlink, Boolean onlyGood, Boolean DontCheckForSafety) 的 填充码</summary>
        </member>
        <member name="T:Evade.Fakes.ShimFoundIntersection">
            <summary>Evade.FoundIntersection 的填充码类型</summary>
        </member>
        <member name="M:Evade.Fakes.ShimFoundIntersection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Evade.Fakes.ShimFoundIntersection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Evade.Fakes.ShimFoundIntersection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Evade.Fakes.ShimFoundIntersection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Evade.Fakes.ShimFoundIntersection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Evade.Fakes.ShimSafePathResult">
            <summary>Evade.SafePathResult 的填充码类型</summary>
        </member>
        <member name="M:Evade.Fakes.ShimSafePathResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Evade.Fakes.ShimSafePathResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Evade.Fakes.ShimSafePathResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSafePathResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Evade.Fakes.ShimSafePathResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Evade.Fakes.ShimSkillshot">
            <summary>Evade.Skillshot 的填充码类型</summary>
        </member>
        <member name="M:Evade.Fakes.ShimSkillshot.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Evade.Fakes.ShimSkillshot.#ctor(Evade.Skillshot)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Evade.Fakes.ShimSkillshot.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Evade.Fakes.ShimSkillshot.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Evade.Fakes.ShimSkillshot.GetValueOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 Skillshot.GetValue(String name) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.CollisionEndGet">
            <summary>设置 Skillshot.get_CollisionEnd() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.ConstructorDetectionTypeSpellDataInt32Vector2Vector2Obj_AI_Base">
            <summary>设置 Skillshot.Skillshot(DetectionType detectionType, SpellData spellData, Int32 startT, Vector2 start, Vector2 end, Obj_AI_Base unit) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.DrawColorColorInt32">
            <summary>设置 Skillshot.Draw(Color color, Color missileColor, Int32 width) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.Evade">
            <summary>设置 Skillshot.Evade() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.EvadePolygonGet">
            <summary>设置 Skillshot.get_EvadePolygon() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.EvadePolygonSetGeometryPolygon">
            <summary>设置 Skillshot.set_EvadePolygon(Polygon value) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.Game_OnGameUpdate">
            <summary>设置 Skillshot.Game_OnGameUpdate() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.GetMissilePositionInt32">
            <summary>设置 Skillshot.GetMissilePosition(Int32 time) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.GlobalGetMissilePositionInt32">
            <summary>设置 Skillshot.GlobalGetMissilePosition(Int32 time) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.IsAboutToHitInt32Obj_AI_Base">
            <summary>设置 Skillshot.IsAboutToHit(Int32 time, Obj_AI_Base unit) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.IsActive">
            <summary>设置 Skillshot.IsActive() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.IsDangerVector2">
            <summary>设置 Skillshot.IsDanger(Vector2 point) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.IsGlobalGet">
            <summary>设置 Skillshot.get_IsGlobal() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.IsSafePathListOfVector2Int32Int32Int32Obj_AI_Base">
            <summary>设置 Skillshot.IsSafePath(List`1&lt;Vector2&gt; path, Int32 timeOffset, Int32 speed, Int32 delay, Obj_AI_Base unit) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.IsSafeToBlinkVector2Int32Int32">
            <summary>设置 Skillshot.IsSafeToBlink(Vector2 point, Int32 timeOffset, Int32 delay) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.IsSafeVector2">
            <summary>设置 Skillshot.IsSafe(Vector2 point) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.PerpendicularGet">
            <summary>设置 Skillshot.get_Perpendicular() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.UnitGet">
            <summary>设置 Skillshot.get_Unit() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.UnitSetObj_AI_Base">
            <summary>设置 Skillshot.set_Unit(Obj_AI_Base value) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.UpdatePolygon">
            <summary>设置 Skillshot.UpdatePolygon() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot._IsSafePathb__0FoundIntersection">
            <summary>设置 Skillshot.&lt;IsSafePath&gt;b__0(FoundIntersection o) 的 填充码</summary>
        </member>
        <member name="T:Evade.Fakes.ShimSkillshot.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:Evade.Fakes.ShimSkillshot.AllInstances.GetValueOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Evade.Skillshot,System.String,``0})">
            <summary>设置 Skillshot.GetValue(String name) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.AllInstances.CollisionEndGet">
            <summary>设置 Skillshot.get_CollisionEnd() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.AllInstances.DrawColorColorInt32">
            <summary>设置 Skillshot.Draw(Color color, Color missileColor, Int32 width) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.AllInstances.Evade">
            <summary>设置 Skillshot.Evade() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.AllInstances.EvadePolygonGet">
            <summary>设置 Skillshot.get_EvadePolygon() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.AllInstances.EvadePolygonSetGeometryPolygon">
            <summary>设置 Skillshot.set_EvadePolygon(Polygon value) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.AllInstances.Game_OnGameUpdate">
            <summary>设置 Skillshot.Game_OnGameUpdate() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.AllInstances.GetMissilePositionInt32">
            <summary>设置 Skillshot.GetMissilePosition(Int32 time) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.AllInstances.GlobalGetMissilePositionInt32">
            <summary>设置 Skillshot.GlobalGetMissilePosition(Int32 time) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.AllInstances.IsAboutToHitInt32Obj_AI_Base">
            <summary>设置 Skillshot.IsAboutToHit(Int32 time, Obj_AI_Base unit) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.AllInstances.IsActive">
            <summary>设置 Skillshot.IsActive() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.AllInstances.IsDangerVector2">
            <summary>设置 Skillshot.IsDanger(Vector2 point) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.AllInstances.IsGlobalGet">
            <summary>设置 Skillshot.get_IsGlobal() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.AllInstances.IsSafePathListOfVector2Int32Int32Int32Obj_AI_Base">
            <summary>设置 Skillshot.IsSafePath(List`1&lt;Vector2&gt; path, Int32 timeOffset, Int32 speed, Int32 delay, Obj_AI_Base unit) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.AllInstances.IsSafeToBlinkVector2Int32Int32">
            <summary>设置 Skillshot.IsSafeToBlink(Vector2 point, Int32 timeOffset, Int32 delay) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.AllInstances.IsSafeVector2">
            <summary>设置 Skillshot.IsSafe(Vector2 point) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.AllInstances.PerpendicularGet">
            <summary>设置 Skillshot.get_Perpendicular() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.AllInstances.UnitGet">
            <summary>设置 Skillshot.get_Unit() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.AllInstances.UnitSetObj_AI_Base">
            <summary>设置 Skillshot.set_Unit(Obj_AI_Base value) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshot.AllInstances.UpdatePolygon">
            <summary>设置 Skillshot.UpdatePolygon() 的 填充码</summary>
        </member>
        <member name="T:Evade.Fakes.ShimSkillshotDetector">
            <summary>Evade.SkillshotDetector 的填充码类型</summary>
        </member>
        <member name="M:Evade.Fakes.ShimSkillshotDetector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Evade.Fakes.ShimSkillshotDetector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Evade.Fakes.ShimSkillshotDetector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshotDetector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshotDetector.GameObject_OnCreateGameObjectEventArgs">
            <summary>设置 SkillshotDetector.GameObject_OnCreate(GameObject sender, EventArgs args) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshotDetector.GameObject_OnDeleteGameObjectEventArgs">
            <summary>设置 SkillshotDetector.GameObject_OnDelete(GameObject sender, EventArgs args) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshotDetector.GameOnOnGameProcessPacketGamePacketEventArgs">
            <summary>设置 SkillshotDetector.GameOnOnGameProcessPacket(GamePacketEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshotDetector.Game_OnWndProcWndEventArgs">
            <summary>设置 SkillshotDetector.Game_OnWndProc(WndEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshotDetector.ObjAiHeroOnOnProcessSpellCastObj_AI_BaseGameObjectProcessSpellCastEventArgs">
            <summary>设置 SkillshotDetector.ObjAiHeroOnOnProcessSpellCast(Obj_AI_Base sender, GameObjectProcessSpellCastEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshotDetector.ObjSpellMissileOnOnCreateGameObjectEventArgs">
            <summary>设置 SkillshotDetector.ObjSpellMissileOnOnCreate(GameObject sender, EventArgs args) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshotDetector.ObjSpellMissileOnOnDeleteGameObjectEventArgs">
            <summary>设置 SkillshotDetector.ObjSpellMissileOnOnDelete(GameObject sender, EventArgs args) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshotDetector.OnDeleteMissileAddSkillshotDetectorOnDeleteMissileH">
            <summary>设置 SkillshotDetector.add_OnDeleteMissile(OnDeleteMissileH value) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshotDetector.OnDeleteMissileRemoveSkillshotDetectorOnDeleteMissileH">
            <summary>设置 SkillshotDetector.remove_OnDeleteMissile(OnDeleteMissileH value) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshotDetector.OnDetectSkillshotAddSkillshotDetectorOnDetectSkillshotH">
            <summary>设置 SkillshotDetector.add_OnDetectSkillshot(OnDetectSkillshotH value) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshotDetector.OnDetectSkillshotRemoveSkillshotDetectorOnDetectSkillshotH">
            <summary>设置 SkillshotDetector.remove_OnDetectSkillshot(OnDetectSkillshotH value) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshotDetector.StaticConstructor">
            <summary>设置 SkillshotDetector.SkillshotDetector() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSkillshotDetector.TriggerOnDetectSkillshotDetectionTypeSpellDataInt32Vector2Vector2Obj_AI_Base">
            <summary>设置 SkillshotDetector.TriggerOnDetectSkillshot(DetectionType detectionType, SpellData spellData, Int32 startT, Vector2 start, Vector2 end, Obj_AI_Base unit) 的 填充码</summary>
        </member>
        <member name="T:Evade.Fakes.ShimSpellData">
            <summary>Evade.SpellData 的填充码类型</summary>
        </member>
        <member name="M:Evade.Fakes.ShimSpellData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Evade.Fakes.ShimSpellData.#ctor(Evade.SpellData)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Evade.Fakes.ShimSpellData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Evade.Fakes.ShimSpellData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSpellData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSpellData.Constructor">
            <summary>设置 SpellData.SpellData() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSpellData.ConstructorStringStringSpellSlotSkillShotTypeInt32Int32Int32Int32BooleanBooleanInt32">
            <summary>设置 SpellData.SpellData(String championName, String spellName, SpellSlot slot, SkillShotType type, Int32 delay, Int32 range, Int32 radius, Int32 missileSpeed, Boolean addHitbox, Boolean fixedRange, Int32 defaultDangerValue) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSpellData.MenuItemNameGet">
            <summary>设置 SpellData.get_MenuItemName() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSpellData.RadiusGet">
            <summary>设置 SpellData.get_Radius() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSpellData.RadiusSetInt32">
            <summary>设置 SpellData.set_Radius(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSpellData.RangeGet">
            <summary>设置 SpellData.get_Range() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSpellData.RangeSetInt32">
            <summary>设置 SpellData.set_Range(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSpellData.RawRadiusGet">
            <summary>设置 SpellData.get_RawRadius() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSpellData.RawRangeGet">
            <summary>设置 SpellData.get_RawRange() 的 填充码</summary>
        </member>
        <member name="T:Evade.Fakes.ShimSpellData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSpellData.AllInstances.MenuItemNameGet">
            <summary>设置 SpellData.get_MenuItemName() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSpellData.AllInstances.RadiusGet">
            <summary>设置 SpellData.get_Radius() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSpellData.AllInstances.RadiusSetInt32">
            <summary>设置 SpellData.set_Radius(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSpellData.AllInstances.RangeGet">
            <summary>设置 SpellData.get_Range() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSpellData.AllInstances.RangeSetInt32">
            <summary>设置 SpellData.set_Range(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSpellData.AllInstances.RawRadiusGet">
            <summary>设置 SpellData.get_RawRadius() 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSpellData.AllInstances.RawRangeGet">
            <summary>设置 SpellData.get_RawRange() 的 填充码</summary>
        </member>
        <member name="T:Evade.Fakes.ShimSpellDatabase">
            <summary>Evade.SpellDatabase 的填充码类型</summary>
        </member>
        <member name="M:Evade.Fakes.ShimSpellDatabase.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Evade.Fakes.ShimSpellDatabase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Evade.Fakes.ShimSpellDatabase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSpellDatabase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSpellDatabase.GetByMissileNameString">
            <summary>设置 SpellDatabase.GetByMissileName(String missileSpellName) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSpellDatabase.GetByNameString">
            <summary>设置 SpellDatabase.GetByName(String spellName) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSpellDatabase.GetBySpeedStringInt32Int32">
            <summary>设置 SpellDatabase.GetBySpeed(String ChampionName, Int32 speed, Int32 id) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimSpellDatabase.StaticConstructor">
            <summary>设置 SpellDatabase.SpellDatabase() 的 填充码</summary>
        </member>
        <member name="T:Evade.Fakes.ShimUtils">
            <summary>Evade.Utils 的填充码类型</summary>
        </member>
        <member name="M:Evade.Fakes.ShimUtils.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Evade.Fakes.ShimUtils.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Evade.Fakes.ShimUtils.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Evade.Fakes.ShimUtils.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Evade.Fakes.ShimUtils.ClosestListOfObj_AI_BaseVector2">
            <summary>设置 Utils.Closest(List`1&lt;Obj_AI_Base&gt; targetList, Vector2 from) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimUtils.DrawLineInWorldVector3Vector3Int32Color">
            <summary>设置 Utils.DrawLineInWorld(Vector3 start, Vector3 end, Int32 width, Color color) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimUtils.ImmobileTimeObj_AI_Base">
            <summary>设置 Utils.ImmobileTime(Obj_AI_Base unit) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimUtils.SendMovePacketObj_AI_BaseVector2">
            <summary>设置 Utils.SendMovePacket(Obj_AI_Base v, Vector2 point) 的 填充码</summary>
        </member>
        <member name="P:Evade.Fakes.ShimUtils.To2DListVector3Array">
            <summary>设置 Utils.To2DList(Vector3[] v) 的 填充码</summary>
        </member>
        <member name="T:Evade.Fakes.StubSkillshot">
            <summary>Evade.Skillshot 的存根类型</summary>
        </member>
        <member name="M:Evade.Fakes.StubSkillshot.#ctor(Evade.DetectionType,Evade.SpellData,System.Int32,SharpDX.Vector2,SharpDX.Vector2,LeagueSharp.Obj_AI_Base)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Evade.Fakes.StubSkillshot.InitializeStub">
            <summary>初始化 type StubSkillshot 的新实例</summary>
        </member>
        <member name="P:Evade.Fakes.StubSkillshot.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Evade.Fakes.StubSkillshot.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Evade.Fakes.StubSkillshot.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Evade.Fakes.StubSpellData">
            <summary>Evade.SpellData 的存根类型</summary>
        </member>
        <member name="M:Evade.Fakes.StubSpellData.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Evade.Fakes.StubSpellData.#ctor(System.String,System.String,LeagueSharp.SpellSlot,Evade.SkillShotType,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Evade.Fakes.StubSpellData.InitializeStub">
            <summary>初始化 type StubSpellData 的新实例</summary>
        </member>
        <member name="P:Evade.Fakes.StubSpellData.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Evade.Fakes.StubSpellData.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Evade.Fakes.StubSpellData.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
    </members>
</doc>
